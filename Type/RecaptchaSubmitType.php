<?php
namespace Grafikart\RecaptchaBundle\Type;

use Grafikart\RecaptchaBundle\Constraints\Recaptcha;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\FormInterface;
use Symfony\Component\Form\FormView;
use Symfony\Component\OptionsResolver\OptionsResolver;

class RecaptchaSubmitType extends AbstractType{
    /**
     * @var string
     */
    private $key;

    /**
     * RecaptchaSubmitType constructor.
     * @param string $key
     */
    public function __construct(string $key)
    {
        $this->key = $key;
    }


    public function configureOptions(OptionsResolver $resolver) //definier les valeurs par défaut pr la confguration
    {
        $resolver -> setDefaults([
            'mapped' => false,
            'constraint' => new Recaptcha()
        ]);
    }
    public function buildView(FormView $view, FormInterface $form, array $options)
    {
       $view -> vars['label']= false;
        $view -> vars['key']= $this -> key ;
        $view -> vars['button']= $options['label'];

    }

    public function getBlockPrefix() //donner un prefix à notre bloc
    {
        return "recaptcha_submit"; // TODO: Change the autogenerated stub
    }

    public function getParent() //le champs parent à celui là
    {
        return TextType::class; // TODO: Change the autogenerated stub
    }
// ces fct de notre nouveau type utilisé
}

